"use strict";var FraglateEval=function(){var fraglate=require("./index"),_=require("./util"),FraglateEval=function(e){this.fraglate=e};return FraglateEval.eval_with_context=function(code,context){return function(){return eval(code)}.call(context)},FraglateEval.eval_with_context_as_function=function(code,context){return function(){return eval("(function () { "+code+" }).bind(this)()")}.call(context)},FraglateEval.prototype.evalTranslate=function(e,t,l){if(_.isNil(e))return"";for(var i=/<([\s\S]+?)>|\\(?:<[\s\S]+?>)/g,r=0,n="";;){var a=i.exec(e);if(null==a){n+=e.substring(r,e.length);break}if(2!==a.length){console.error("trans array length !== 2. trans: ",a);break}n+=e.substring(r,a.index),r=a.index,n+=_.isNil(a[1])?a[0]:this.fraglate.translate(a[1],t,l),r+=a[0].length}return n},FraglateEval.prototype.evalInterpolate=function(e,t){if(_.isNil(e))return"";for(var l=/\{\{([\s\S]+?)\}\}/g,i=0,r="";;){var n=l.exec(e);if(null==n){r+=e.substring(i,e.length);break}if(2!==n.length){console.error("interpolate array length !== 2. interpolate: ",n);break}r+=e.substring(i,n.index),i=n.index,r+=_.isNil(n[1])?trans[0]:FraglateEval.eval_with_context(n[1],t),i+=n[0].length}return r},FraglateEval.prototype.evalInterpolateAsFunction=function(e,t){if(_.isNil(e))return"";for(var l=/\{\{\{([\s\S]+?)\}\}\}/g,i=0,r="";;){var n=l.exec(e);if(null==n){r+=e.substring(i,e.length);break}if(2!==n.length){console.error("interpolate array length !== 2. interpolate: ",n);break}r+=e.substring(i,n.index),i=n.index,r+=_.isNil(n[1])?trans[0]:FraglateEval.eval_with_context_as_function(n[1],t),i+=n[0].length}return r},FraglateEval.prototype.eval=function(e,t,l,i){_.isNil(i)&&(i={});var r=this.evalTranslate(e,t,l),n=this.evalInterpolateAsFunction(r,i),a=this.evalInterpolate(n,i);return a},FraglateEval}();module.exports=FraglateEval;var FraglateClass=function(){function e(e){var t=e.split("-",2),l=t[0],i=t[1];return i=n.isNil(i)?null:i.toLowerCase(),[l,i]}function t(e,t,l){return n.isNil(l)&&!n.isNil(e[t])?!0:!(n.isNil(l)||n.isNil(e[t])||n.isNil(e[t].region[l]))}function l(e,t){return t?e+"-"+t:e}function i(e,t){this.config=Object.assign({},i.DEFAULT_CONFIG,e),this.locales={},n.isNil(t)?this.load_all_localesSync(this.config.locale_path):this.load_all_locales(this.config.locale_path,t),global[this.config.translate]=this._t.bind(this),global[this.config.eval]=this._e.bind(this)}var r=require("./FraglateEval"),n=require("./util"),a=require("asyncawait/async"),o=require("asyncawait/await"),s=require("bluebird"),c=s.promisifyAll(require("fs")),u=require("path"),f=require("process");return i.EVAL=r,i.DEFAULT_CONFIG={translate:"_t",eval:"_e",locale_path:u.join(f.cwd(),"locale"),locale_extension:"json",default_locale:"en",cookiename:"locale"},i.GET_ACCEPTED_LANGUAGES_FROM_HEADER=function(e){var t=e.split(",");return t.map(function(e){var t=e.trim().split(";q=");if(t.length<2)t.push(1);else{var l=parseFloat(t[1]);t[1]=l?l:0}return t}).filter(function(e){return e[1]>0}).sort(function(e,t){return t[1]-e[1]})},i.prototype.as_middleware=function(){return function(e,t,l){return e.locale||this.guess_language(e),this.express_request=e,"function"==typeof l?l():void 0}.bind(this)},i.prototype.process_locale_content=function(t,l){var i=e(t.replace(/\.json$/g,"")),r=i[0],a=i[1],o=JSON.parse(l);n.isNil(a)?n.isNil(this.locales[r])?this.locales[r]={data:o,region:{}}:this.locales[r].data=o:n.isNil(this.locales[r])?(this.locales[r]={data:"",region:{}},this.locales[r].region[a]=o):this.locales[r].region[a]=o},i.prototype.load_all_locales=function(e,t){var l=a(function(e,t){var l=o(c.readdirAsync(e)),i=o(l.map(function(t){return c.readFileAsync(u.join(e,t)).then(function(e){return[t,e]})}));i.map(function(e){var t=e[0],l=e[1];this.process_locale_content(t,l)}.bind(this))}.bind(this));l(e).then(t)["catch"](t)},i.prototype.load_all_localesSync=function(e){var t=c.readdirSync(e);t.map(function(t){var l=c.readFileSync(u.join(e,t));this.process_locale_content(t,l)}.bind(this))},i.prototype.guess_language=function(r){if("object"==typeof r){var a=this.config.cookiename;if(!n.isNil(a)&&!n.isNil(r.cookies)&&!n.isNil(r.cookies[a])){var o=r.cookies[a],s=e(o);if(t(this.locales,s[0],s[1]))return void(r.locale=l(s[0],s[1]))}var c=r.headers["accept-language"];if(c){for(var u=i.GET_ACCEPTED_LANGUAGES_FROM_HEADER(c),f=null,h=null,g=e(this.config.default_locale),p=0;p<u.length;++p){var s=e(u[p][0]),_=s[0],v=s[1],d=this.locales[_],N=this.locales[_].region[v];if(n.isNil(v)&&!n.isNil(d)){f=[_,null];break}if(!(n.isNil(v)||n.isNil(d)||n.isNil(N))){f=[_,v];break}n.isNil(v)||n.isNil(d)||!n.isNil(N)||(h=[_,null])}var y=f||h||g;r.locale=l(y[0],y[1])}}},i.prototype._t=function(l,i,r){n.isNil(i)&&(i=n.isNil(this.express_request)?this.config.default_locale:this.express_request.locale);var a=e(i),o=a[0],s=a[1];return t(this.locales,o,s)?this.translate(l,o,s,r):(console.error("Locale '"+i+"' is not configured!"),console.error("Locale available: "+JSON.stringify(this.locales)),"")},i.prototype._e=function(l,r,a){n.isNil(r)&&(r=n.isNil(this.express_request)?this.config.default_locale:this.express_request.locale);var o=e(r),s=o[0],c=o[1];return t(this.locales,s,c)?new i.EVAL(this).eval(l,s,c,a):(console.error("Locale '"+r+"' is not configured!"),"")},i.prototype.translate=function(e,t,l,r){var a=new i.EVAL(this),o=n.isNull(l)?this.locales[t].data[e]:this.locales[t].region[l][e];return"string"==typeof o?a.eval(o,t,l,r):("undefined"==typeof o?console.error("locale: "+locale.toString()+', no translation to key: "'+e.toString()+'"'):console.error("locale: "+locale.toString()+", translation to '"+(typeof o).toString()+"' is not supported!"),null)},i}();module.exports=FraglateClass,module.exports.isNil=function(e){return null==e},module.exports.isNull=function(e){return null===e};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZyYWdsYXRlRXZhbC5qcyIsImluZGV4LmpzIiwidXRpbC5qcyJdLCJuYW1lcyI6WyJGcmFnbGF0ZUV2YWwiLCJmcmFnbGF0ZSIsInJlcXVpcmUiLCJfIiwidGhpcyIsImV2YWxfd2l0aF9jb250ZXh0IiwiY29kZSIsImNvbnRleHQiLCJldmFsIiwiY2FsbCIsImV2YWxfd2l0aF9jb250ZXh0X2FzX2Z1bmN0aW9uIiwicHJvdG90eXBlIiwiZXZhbFRyYW5zbGF0ZSIsInNlbnRlbmNlIiwibGFuZyIsInJlZ2lvbiIsImlzTmlsIiwidHJhbnNfcmUiLCJzZW50ZW5jZV9jdXJfaWR4IiwicmVzdWx0IiwidHJhbnMiLCJleGVjIiwic3Vic3RyaW5nIiwibGVuZ3RoIiwiY29uc29sZSIsImVycm9yIiwiaW5kZXgiLCJ0cmFuc2xhdGUiLCJldmFsSW50ZXJwb2xhdGUiLCJpbnRlcnBvbGF0ZV9yZSIsImludGVycG9sYXRlIiwiZXZhbEludGVycG9sYXRlQXNGdW5jdGlvbiIsInRyYW5zZWRfc2VudGVuY2UiLCJpbnRlcnBvbGF0ZWRfYXNfZnVuY3Rpb25fc2VudGVuY2UiLCJpbnRlcnBvbGF0ZWRfc2VudGVuY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiRnJhZ2xhdGVDbGFzcyIsIl9fZ2V0X2xhbmdfcmVnaW9uIiwibGFuZ19zdHIiLCJsYW5nX3JlZ2lvbiIsInNwbGl0IiwidG9Mb3dlckNhc2UiLCJfX2lzX2V4aXN0X2xvY2FsZSIsImxvY2FsZXMiLCJfX2NvbnN0cnVjdF9sYW5nX3JlZ2lvbiIsIkZyYWdsYXRlIiwiY29uZmlnIiwiY2FsbGJhY2siLCJPYmplY3QiLCJhc3NpZ24iLCJERUZBVUxUX0NPTkZJRyIsImxvYWRfYWxsX2xvY2FsZXNTeW5jIiwibG9hZF9hbGxfbG9jYWxlcyIsImdsb2JhbCIsIl90IiwiYmluZCIsIl9lIiwiX19hc3luY19fIiwiX19hd2FpdF9fIiwiYmx1ZWJpcmQiLCJmcyIsInByb21pc2lmeUFsbCIsInBhdGgiLCJwcm9jZXNzIiwiRVZBTCIsImxvY2FsZV9wYXRoIiwiam9pbiIsImN3ZCIsImxvY2FsZV9leHRlbnNpb24iLCJkZWZhdWx0X2xvY2FsZSIsImNvb2tpZW5hbWUiLCJHRVRfQUNDRVBURURfTEFOR1VBR0VTX0ZST01fSEVBREVSIiwiaGVhZGVyIiwibGFuZ3VhZ2VzIiwibWFwIiwiaXRlbSIsInByZWZlcmVuY2UiLCJ0cmltIiwicHVzaCIsInF1YWxpdHkiLCJwYXJzZUZsb2F0IiwiZmlsdGVyIiwic29ydCIsInByZWZlcmVuY2UxIiwicHJlZmVyZW5jZTIiLCJhc19taWRkbGV3YXJlIiwicmVxIiwicmVzIiwibmV4dCIsImxvY2FsZSIsImd1ZXNzX2xhbmd1YWdlIiwiZXhwcmVzc19yZXF1ZXN0IiwicHJvY2Vzc19sb2NhbGVfY29udGVudCIsImZpbGVuYW1lIiwiZmlsZWNvbnRlbnQiLCJyZXBsYWNlIiwiY29udGVudCIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJsb2FkX2FsbF9sb2NhbGVzX2FzeW5jIiwiZmlsZXMiLCJyZWFkZGlyQXN5bmMiLCJmaWxlX2NvbnRlbnRfcGFpcnMiLCJyZWFkRmlsZUFzeW5jIiwidGhlbiIsImZpbGVfY29udGVudCIsInJlYWRkaXJTeW5jIiwicmVhZEZpbGVTeW5jIiwiY29va2llcyIsImNvb2tpZV9sb2NhbGUiLCJhY2NfbGFuZ3MiLCJoZWFkZXJzIiwicHJlZl9sYW5ncyIsImJlc3RHdWVzcyIsImZhbGxiYWNrR3Vlc3MiLCJkZWZhdWx0TG9jYWxlIiwiaSIsImxvY2FsZXNfbGFuZyIsImxvY2FsZXNfcmVnaW9uIiwiZmluYWxHdWVzcyIsImtleSIsImxvY2FsZV9zdHIiLCJzdHJpbmdpZnkiLCJzdHIiLCJmZSIsImxvY2FsZXVuaXQiLCJpc051bGwiLCJ0b1N0cmluZyIsInZhbHVlIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLElBQUFBLGNBQUEsV0FDQSxHQUFBQyxVQUFBQyxRQUFBLFdBQ0FDLEVBQUFELFFBQUEsVUFFQUYsYUFBQSxTQUFBQyxHQUNBRyxLQUFBSCxTQUFBQSxF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ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEZyYWdsYXRlRXZhbCA9IChmdW5jdGlvbigpIHtcbiAgICB2YXIgZnJhZ2xhdGUgPSByZXF1aXJlKCcuL2luZGV4Jyk7XG4gICAgdmFyIF8gPSByZXF1aXJlKCcuL3V0aWwnKTtcblxuICAgIHZhciBGcmFnbGF0ZUV2YWwgPSBmdW5jdGlvbihmcmFnbGF0ZSkge1xuICAgICAgICB0aGlzLmZyYWdsYXRlID0gZnJhZ2xhdGU7XG4gICAgfVxuXG4gICAgRnJhZ2xhdGVFdmFsLmV2YWxfd2l0aF9jb250ZXh0ID0gZnVuY3Rpb24oY29kZSwgY29udGV4dCkge1xuICAgICAgICByZXR1cm4gKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGV2YWwoY29kZSk7XG4gICAgICAgIH0pLmNhbGwoY29udGV4dCk7XG4gICAgfTtcblxuICAgIEZyYWdsYXRlRXZhbC5ldmFsX3dpdGhfY29udGV4dF9hc19mdW5jdGlvbiA9IGZ1bmN0aW9uKGNvZGUsIGNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBldmFsKFxuICAgICAgICAgICAgICAgICcoZnVuY3Rpb24gKCkgeyAnICsgY29kZSArICcgfSkuYmluZCh0aGlzKSgpJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfSkuY2FsbChjb250ZXh0KTtcbiAgICB9O1xuXG4gICAgRnJhZ2xhdGVFdmFsLnByb3RvdHlwZS5ldmFsVHJhbnNsYXRlID0gZnVuY3Rpb24oc2VudGVuY2UsIGxhbmcsIHJlZ2lvbikge1xuICAgICAgICBpZiAoXy5pc05pbChzZW50ZW5jZSkpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICB2YXIgdHJhbnNfcmUgPSAvPChbXFxzXFxTXSs/KT58XFxcXCg/OjxbXFxzXFxTXSs/PikvZztcbiAgICAgICAgdmFyIHNlbnRlbmNlX2N1cl9pZHggPSAwO1xuICAgICAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICB2YXIgdHJhbnMgPSB0cmFuc19yZS5leGVjKHNlbnRlbmNlKTtcbiAgICAgICAgICAgIGlmICh0cmFucyA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHNlbnRlbmNlLnN1YnN0cmluZyhzZW50ZW5jZV9jdXJfaWR4LCBzZW50ZW5jZS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRyYW5zLmxlbmd0aCAhPT0gMikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3RyYW5zIGFycmF5IGxlbmd0aCAhPT0gMi4gdHJhbnM6ICcsIHRyYW5zKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdCArPSBzZW50ZW5jZS5zdWJzdHJpbmcoc2VudGVuY2VfY3VyX2lkeCwgdHJhbnMuaW5kZXgpO1xuICAgICAgICAgICAgc2VudGVuY2VfY3VyX2lkeCA9IHRyYW5zLmluZGV4O1xuICAgICAgICAgICAgaWYgKCFfLmlzTmlsKHRyYW5zWzFdKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSB0aGlzLmZyYWdsYXRlLnRyYW5zbGF0ZSh0cmFuc1sxXSwgbGFuZywgcmVnaW9uKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHRyYW5zWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VudGVuY2VfY3VyX2lkeCArPSB0cmFuc1swXS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgRnJhZ2xhdGVFdmFsLnByb3RvdHlwZS5ldmFsSW50ZXJwb2xhdGUgPSBmdW5jdGlvbihzZW50ZW5jZSwgY29udGV4dCkge1xuICAgICAgICBpZiAoXy5pc05pbChzZW50ZW5jZSkpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICB2YXIgaW50ZXJwb2xhdGVfcmUgPSAvXFx7XFx7KFtcXHNcXFNdKz8pXFx9XFx9L2c7XG4gICAgICAgIHZhciBzZW50ZW5jZV9jdXJfaWR4ID0gMDtcbiAgICAgICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgdmFyIGludGVycG9sYXRlID0gaW50ZXJwb2xhdGVfcmUuZXhlYyhzZW50ZW5jZSk7XG4gICAgICAgICAgICBpZiAoaW50ZXJwb2xhdGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSBzZW50ZW5jZS5zdWJzdHJpbmcoc2VudGVuY2VfY3VyX2lkeCwgc2VudGVuY2UubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbnRlcnBvbGF0ZS5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdpbnRlcnBvbGF0ZSBhcnJheSBsZW5ndGggIT09IDIuIGludGVycG9sYXRlOiAnLFxuICAgICAgICAgICAgICAgICAgICBpbnRlcnBvbGF0ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQgKz0gc2VudGVuY2Uuc3Vic3RyaW5nKHNlbnRlbmNlX2N1cl9pZHgsIGludGVycG9sYXRlLmluZGV4KTtcbiAgICAgICAgICAgIHNlbnRlbmNlX2N1cl9pZHggPSBpbnRlcnBvbGF0ZS5pbmRleDtcbiAgICAgICAgICAgIGlmICghXy5pc05pbChpbnRlcnBvbGF0ZVsxXSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gRnJhZ2xhdGVFdmFsLmV2YWxfd2l0aF9jb250ZXh0KGludGVycG9sYXRlWzFdLFxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IHRyYW5zWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VudGVuY2VfY3VyX2lkeCArPSBpbnRlcnBvbGF0ZVswXS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgRnJhZ2xhdGVFdmFsLnByb3RvdHlwZS5ldmFsSW50ZXJwb2xhdGVBc0Z1bmN0aW9uID0gZnVuY3Rpb24oc2VudGVuY2UsIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKF8uaXNOaWwoc2VudGVuY2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGludGVycG9sYXRlX3JlID0gL1xce1xce1xceyhbXFxzXFxTXSs/KVxcfVxcfVxcfS9nO1xuICAgICAgICB2YXIgc2VudGVuY2VfY3VyX2lkeCA9IDA7XG4gICAgICAgIHZhciByZXN1bHQgPSAnJztcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIHZhciBpbnRlcnBvbGF0ZSA9IGludGVycG9sYXRlX3JlLmV4ZWMoc2VudGVuY2UpO1xuICAgICAgICAgICAgaWYgKGludGVycG9sYXRlID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc2VudGVuY2Uuc3Vic3RyaW5nKHNlbnRlbmNlX2N1cl9pZHgsIHNlbnRlbmNlLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW50ZXJwb2xhdGUubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignaW50ZXJwb2xhdGUgYXJyYXkgbGVuZ3RoICE9PSAyLiBpbnRlcnBvbGF0ZTogJywgaW50ZXJwb2xhdGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzdWx0ICs9IHNlbnRlbmNlLnN1YnN0cmluZyhzZW50ZW5jZV9jdXJfaWR4LCBpbnRlcnBvbGF0ZS5pbmRleCk7XG4gICAgICAgICAgICBzZW50ZW5jZV9jdXJfaWR4ID0gaW50ZXJwb2xhdGUuaW5kZXg7XG4gICAgICAgICAgICBpZiAoIV8uaXNOaWwoaW50ZXJwb2xhdGVbMV0pKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IEZyYWdsYXRlRXZhbC5ldmFsX3dpdGhfY29udGV4dF9hc19mdW5jdGlvbihpbnRlcnBvbGF0ZVsxXSwgY29udGV4dCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdCArPSB0cmFuc1swXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbnRlbmNlX2N1cl9pZHggKz0gaW50ZXJwb2xhdGVbMF0ubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgIEZyYWdsYXRlRXZhbC5wcm90b3R5cGUuZXZhbCA9IGZ1bmN0aW9uKHNlbnRlbmNlLCBsYW5nLCByZWdpb24sIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKF8uaXNOaWwoY29udGV4dCkpIHtcbiAgICAgICAgICAgIGNvbnRleHQgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdHJhbnNlZF9zZW50ZW5jZSA9IHRoaXMuZXZhbFRyYW5zbGF0ZShzZW50ZW5jZSwgbGFuZywgcmVnaW9uKTtcbiAgICAgICAgdmFyIGludGVycG9sYXRlZF9hc19mdW5jdGlvbl9zZW50ZW5jZSA9IHRoaXMuZXZhbEludGVycG9sYXRlQXNGdW5jdGlvbih0cmFuc2VkX3NlbnRlbmNlLCBjb250ZXh0KTtcbiAgICAgICAgdmFyIGludGVycG9sYXRlZF9zZW50ZW5jZSA9IHRoaXMuZXZhbEludGVycG9sYXRlKGludGVycG9sYXRlZF9hc19mdW5jdGlvbl9zZW50ZW5jZSwgY29udGV4dCk7XG5cbiAgICAgICAgcmV0dXJuIGludGVycG9sYXRlZF9zZW50ZW5jZTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIEZyYWdsYXRlRXZhbDtcbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gRnJhZ2xhdGVFdmFsOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIEZyYWdsYXRlQ2xhc3MgPSAoZnVuY3Rpb24oKSB7XG4gICAgdmFyIEZyYWdsYXRlRXZhbCA9IHJlcXVpcmUoJy4vRnJhZ2xhdGVFdmFsJyk7XG4gICAgdmFyIF8gPSByZXF1aXJlKCcuL3V0aWwnKTtcblxuICAgIHZhciBfX2FzeW5jX18gPSByZXF1aXJlKCdhc3luY2F3YWl0L2FzeW5jJyk7XG4gICAgdmFyIF9fYXdhaXRfXyA9IHJlcXVpcmUoJ2FzeW5jYXdhaXQvYXdhaXQnKTtcbiAgICB2YXIgYmx1ZWJpcmQgPSByZXF1aXJlKCdibHVlYmlyZCcpO1xuICAgIHZhciBmcyA9IGJsdWViaXJkLnByb21pc2lmeUFsbChyZXF1aXJlKCdmcycpKTtcbiAgICB2YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbiAgICB2YXIgcHJvY2VzcyA9IHJlcXVpcmUoJ3Byb2Nlc3MnKTtcblxuICAgIGZ1bmN0aW9uIF9fZ2V0X2xhbmdfcmVnaW9uKGxhbmdfc3RyKSB7XG4gICAgICAgIHZhciBsYW5nX3JlZ2lvbiA9IGxhbmdfc3RyLnNwbGl0KCctJywgMik7XG4gICAgICAgIHZhciBsYW5nID0gbGFuZ19yZWdpb25bMF07XG4gICAgICAgIHZhciByZWdpb24gPSBsYW5nX3JlZ2lvblsxXTtcbiAgICAgICAgaWYgKCFfLmlzTmlsKHJlZ2lvbikpIHtcbiAgICAgICAgICAgIHJlZ2lvbiA9IHJlZ2lvbi50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVnaW9uID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW2xhbmcsIHJlZ2lvbl07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX19pc19leGlzdF9sb2NhbGUobG9jYWxlcywgbGFuZywgcmVnaW9uKSB7XG4gICAgICAgIGlmIChfLmlzTmlsKHJlZ2lvbikgJiYgIV8uaXNOaWwobG9jYWxlc1tsYW5nXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKCFfLmlzTmlsKHJlZ2lvbikgJiYgIV8uaXNOaWwobG9jYWxlc1tsYW5nXSkgJiYgIV8uaXNOaWwobG9jYWxlc1tsYW5nXVsncmVnaW9uJ11bcmVnaW9uXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfX2NvbnN0cnVjdF9sYW5nX3JlZ2lvbihsYW5nLCByZWdpb24pIHtcbiAgICAgICAgaWYgKHJlZ2lvbikge1xuICAgICAgICAgICAgcmV0dXJuIGxhbmcgKyAnLScgKyByZWdpb247XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxhbmc7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gRnJhZ2xhdGUoY29uZmlnLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIEZyYWdsYXRlLkRFRkFVTFRfQ09ORklHLCBjb25maWcpO1xuICAgICAgICAvKlxuICAgICAgICAgIExvY2FsZSBEYXRhIFN0cnVjdHVyZTpcbiAgICAgICAgICB7XG4gICAgICAgICAgICAnZW4nOiB7XG4gICAgICAgICAgICAgICdkYXRhJzogSlNPTiwgLy8gZmlsZTogZW4uanNvblxuICAgICAgICAgICAgICAncmVnaW9uJzoge1xuICAgICAgICAgICAgICAgICd1cyc6IEpTT04sIC8vIGZpbGU6IGVuLXVzLmpzb25cbiAgICAgICAgICAgICAgICAndWsnOiBKU09OXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgemg6IHtcbiAgICAgICAgICAgICAgJ2RhdGEnOiBKU09OLCAvLyBmaWxlOiB6aC5qc29uXG4gICAgICAgICAgICAgICdyZWdpb24nOiB7XG4gICAgICAgICAgICAgICAgJ2NuJzogSlNPTixcbiAgICAgICAgICAgICAgICAndHcnOiBKU09OXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICovXG4gICAgICAgIHRoaXMubG9jYWxlcyA9IHt9O1xuICAgICAgICBpZiAoXy5pc05pbChjYWxsYmFjaykpIHtcbiAgICAgICAgICAgIHRoaXMubG9hZF9hbGxfbG9jYWxlc1N5bmModGhpcy5jb25maWdbJ2xvY2FsZV9wYXRoJ10pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5sb2FkX2FsbF9sb2NhbGVzKHRoaXMuY29uZmlnWydsb2NhbGVfcGF0aCddLCBjYWxsYmFjayk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBpbml0IGdsb2JhbHNcbiAgICAgICAgZ2xvYmFsW3RoaXMuY29uZmlnWyd0cmFuc2xhdGUnXV0gPSB0aGlzLl90LmJpbmQodGhpcyk7XG4gICAgICAgIGdsb2JhbFt0aGlzLmNvbmZpZ1snZXZhbCddXSA9IHRoaXMuX2UuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBGcmFnbGF0ZS5FVkFMID0gRnJhZ2xhdGVFdmFsO1xuXG4gICAgRnJhZ2xhdGUuREVGQVVMVF9DT05GSUcgPSB7XG4gICAgICAgICd0cmFuc2xhdGUnOiAnX3QnLFxuICAgICAgICAnZXZhbCc6ICdfZScsXG4gICAgICAgICdsb2NhbGVfcGF0aCc6IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnbG9jYWxlJyksXG4gICAgICAgICdsb2NhbGVfZXh0ZW5zaW9uJzogJ2pzb24nLFxuICAgICAgICAnZGVmYXVsdF9sb2NhbGUnOiAnZW4nLFxuICAgICAgICAnY29va2llbmFtZSc6ICdsb2NhbGUnLFxuICAgIH07XG5cbiAgICAvLyBFeGFtcGxlOlxuICAgIC8vICAgR0VUX0FDQ0VQVEVEX0xBTkdVQUdFU19GUk9NX0hFQURFUignZW4tVVMsZW47cT0wLjgsemgtQ047cT0wLjYsemg7cT0wLjQsemgtVFc7cT0wLjInKVxuICAgIC8vICAgPT0+IFsgWyAnZW4tVVMnLCAxIF0sIFsgJ2VuJywgMC44IF0sIFsgJ3poLUNOJywgMC42IF0sIFsgJ3poJywgMC40IF0sIFsgJ3poLVRXJywgMC4yIF0gXVxuICAgIEZyYWdsYXRlLkdFVF9BQ0NFUFRFRF9MQU5HVUFHRVNfRlJPTV9IRUFERVIgPSBmdW5jdGlvbihoZWFkZXIpIHtcbiAgICAgICAgdmFyIGxhbmd1YWdlcyA9IGhlYWRlci5zcGxpdCgnLCcpO1xuICAgICAgICByZXR1cm4gbGFuZ3VhZ2VzLm1hcChmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICB2YXIgcHJlZmVyZW5jZSA9IGl0ZW0udHJpbSgpLnNwbGl0KCc7cT0nKTtcbiAgICAgICAgICAgIGlmIChwcmVmZXJlbmNlLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICBwcmVmZXJlbmNlLnB1c2goMS4wKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIHF1YWxpdHkgPSBwYXJzZUZsb2F0KHByZWZlcmVuY2VbMV0pO1xuICAgICAgICAgICAgICAgIHByZWZlcmVuY2VbMV0gPSBxdWFsaXR5ID8gcXVhbGl0eSA6IDAuMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwcmVmZXJlbmNlO1xuICAgICAgICB9KS5maWx0ZXIoZnVuY3Rpb24ocHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIHByZWZlcmVuY2VbMV0gPiAwO1xuICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uKHByZWZlcmVuY2UxLCBwcmVmZXJlbmNlMikge1xuICAgICAgICAgICAgLy8gYWNjZW5kaW5nXG4gICAgICAgICAgICByZXR1cm4gcHJlZmVyZW5jZTJbMV0gLSBwcmVmZXJlbmNlMVsxXTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIGFzX21pZGRsZXdhcmUgd2lsbCBwcm92aWRlIGVhY2ggcmVxdWVzdCB3aXRoIHByb3BlcnR5OiAnbG9jYWxlJyBhcyBiZXN0IG1hdGNoZWQgbG9jYWxlXG4gICAgRnJhZ2xhdGUucHJvdG90eXBlLmFzX21pZGRsZXdhcmUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXJlcS5sb2NhbGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmd1ZXNzX2xhbmd1YWdlKHJlcSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmV4cHJlc3NfcmVxdWVzdCA9IHJlcTtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBuZXh0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHRoaXMpO1xuICAgIH07XG5cbiAgICBGcmFnbGF0ZS5wcm90b3R5cGUucHJvY2Vzc19sb2NhbGVfY29udGVudCA9IGZ1bmN0aW9uKGZpbGVuYW1lLCBmaWxlY29udGVudCkge1xuICAgICAgICB2YXIgbGFuZ19yZWdpb24gPSBfX2dldF9sYW5nX3JlZ2lvbihmaWxlbmFtZS5yZXBsYWNlKC9cXC5qc29uJC9nLCAnJykpO1xuICAgICAgICB2YXIgbGFuZyA9IGxhbmdfcmVnaW9uWzBdO1xuICAgICAgICB2YXIgcmVnaW9uID0gbGFuZ19yZWdpb25bMV07XG4gICAgICAgIHZhciBjb250ZW50ID0gSlNPTi5wYXJzZShmaWxlY29udGVudCk7XG4gICAgICAgIGlmIChfLmlzTmlsKHJlZ2lvbikpIHtcbiAgICAgICAgICAgIGlmIChfLmlzTmlsKHRoaXMubG9jYWxlc1tsYW5nXSkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsZXNbbGFuZ10gPSB7XG4gICAgICAgICAgICAgICAgICAgICdkYXRhJzogY29udGVudCxcbiAgICAgICAgICAgICAgICAgICAgJ3JlZ2lvbic6IHt9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2NhbGVzW2xhbmddWydkYXRhJ10gPSBjb250ZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKF8uaXNOaWwodGhpcy5sb2NhbGVzW2xhbmddKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9jYWxlc1tsYW5nXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOiAnJyxcbiAgICAgICAgICAgICAgICAgICAgJ3JlZ2lvbic6IHt9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsZXNbbGFuZ11bJ3JlZ2lvbiddW3JlZ2lvbl0gPSBjb250ZW50O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsZXNbbGFuZ11bJ3JlZ2lvbiddW3JlZ2lvbl0gPSBjb250ZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIEZyYWdsYXRlLnByb3RvdHlwZS5sb2FkX2FsbF9sb2NhbGVzID0gZnVuY3Rpb24obG9jYWxlX3BhdGgsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBsb2FkX2FsbF9sb2NhbGVzX2FzeW5jID0gX19hc3luY19fKGZ1bmN0aW9uKGxvY2FsZV9wYXRoLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgdmFyIGZpbGVzID0gX19hd2FpdF9fKGZzLnJlYWRkaXJBc3luYyhsb2NhbGVfcGF0aCkpO1xuICAgICAgICAgICAgdmFyIGZpbGVfY29udGVudF9wYWlycyA9IF9fYXdhaXRfXyhmaWxlcy5tYXAoZnVuY3Rpb24oZmlsZW5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnMucmVhZEZpbGVBc3luYyhwYXRoLmpvaW4obG9jYWxlX3BhdGgsIGZpbGVuYW1lKSlcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oY29udGVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtmaWxlbmFtZSwgY29udGVudF07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgZmlsZV9jb250ZW50X3BhaXJzLm1hcChmdW5jdGlvbihmaWxlX2NvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZmlsZW5hbWUgPSBmaWxlX2NvbnRlbnRbMF07XG4gICAgICAgICAgICAgICAgdmFyIGZpbGVjb250ZW50ID0gZmlsZV9jb250ZW50WzFdO1xuICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc19sb2NhbGVfY29udGVudChmaWxlbmFtZSwgZmlsZWNvbnRlbnQpO1xuICAgICAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcblxuICAgICAgICBsb2FkX2FsbF9sb2NhbGVzX2FzeW5jKGxvY2FsZV9wYXRoKS50aGVuKGNhbGxiYWNrKS5jYXRjaChjYWxsYmFjayk7XG4gICAgfTtcblxuICAgIEZyYWdsYXRlLnByb3RvdHlwZS5sb2FkX2FsbF9sb2NhbGVzU3luYyA9IGZ1bmN0aW9uKGxvY2FsZV9wYXRoKSB7XG4gICAgICAgIHZhciBmaWxlcyA9IGZzLnJlYWRkaXJTeW5jKGxvY2FsZV9wYXRoKTtcbiAgICAgICAgZmlsZXMubWFwKGZ1bmN0aW9uKGZpbGVuYW1lKSB7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4obG9jYWxlX3BhdGgsIGZpbGVuYW1lKSk7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3NfbG9jYWxlX2NvbnRlbnQoZmlsZW5hbWUsIGNvbnRlbnQpO1xuICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgIH07XG5cbiAgICBGcmFnbGF0ZS5wcm90b3R5cGUuZ3Vlc3NfbGFuZ3VhZ2UgPSBmdW5jdGlvbihyZXEpIHtcbiAgICAgICAgaWYgKCEodHlwZW9mIHJlcSA9PT0gJ29iamVjdCcpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjaGVjayBjb29raWVcbiAgICAgICAgdmFyIGNvb2tpZW5hbWUgPSB0aGlzLmNvbmZpZ1snY29va2llbmFtZSddO1xuICAgICAgICBpZiAoIV8uaXNOaWwoY29va2llbmFtZSkgJiYgIV8uaXNOaWwocmVxLmNvb2tpZXMpICYmICFfLmlzTmlsKHJlcS5jb29raWVzW2Nvb2tpZW5hbWVdKSkge1xuICAgICAgICAgICAgdmFyIGNvb2tpZV9sb2NhbGUgPSByZXEuY29va2llc1tjb29raWVuYW1lXTtcbiAgICAgICAgICAgIHZhciBsYW5nX3JlZ2lvbiA9IF9fZ2V0X2xhbmdfcmVnaW9uKGNvb2tpZV9sb2NhbGUpO1xuICAgICAgICAgICAgaWYgKF9faXNfZXhpc3RfbG9jYWxlKHRoaXMubG9jYWxlcywgbGFuZ19yZWdpb25bMF0sIGxhbmdfcmVnaW9uWzFdKSkge1xuICAgICAgICAgICAgICAgIHJlcS5sb2NhbGUgPSBfX2NvbnN0cnVjdF9sYW5nX3JlZ2lvbihsYW5nX3JlZ2lvblswXSwgbGFuZ19yZWdpb25bMV0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGd1ZXNzIHJlcXVlc3QgaGVhZGVyOiBhY2NlcHQtbGFuZ3VhZ2VcbiAgICAgICAgdmFyIGFjY19sYW5ncyA9IHJlcS5oZWFkZXJzWydhY2NlcHQtbGFuZ3VhZ2UnXTtcbiAgICAgICAgaWYgKGFjY19sYW5ncykge1xuICAgICAgICAgICAgdmFyIHByZWZfbGFuZ3MgPSBGcmFnbGF0ZS5HRVRfQUNDRVBURURfTEFOR1VBR0VTX0ZST01fSEVBREVSKGFjY19sYW5ncyk7XG4gICAgICAgICAgICB2YXIgYmVzdEd1ZXNzID0gbnVsbCxcbiAgICAgICAgICAgICAgICBmYWxsYmFja0d1ZXNzID0gbnVsbDtcbiAgICAgICAgICAgIHZhciBkZWZhdWx0TG9jYWxlID0gX19nZXRfbGFuZ19yZWdpb24odGhpcy5jb25maWdbJ2RlZmF1bHRfbG9jYWxlJ10pO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcmVmX2xhbmdzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxhbmdfcmVnaW9uID0gX19nZXRfbGFuZ19yZWdpb24ocHJlZl9sYW5nc1tpXVswXSk7XG4gICAgICAgICAgICAgICAgdmFyIGxhbmcgPSBsYW5nX3JlZ2lvblswXTtcbiAgICAgICAgICAgICAgICB2YXIgcmVnaW9uID0gbGFuZ19yZWdpb25bMV07XG4gICAgICAgICAgICAgICAgdmFyIGxvY2FsZXNfbGFuZyA9IHRoaXMubG9jYWxlc1tsYW5nXTtcbiAgICAgICAgICAgICAgICB2YXIgbG9jYWxlc19yZWdpb24gPSB0aGlzLmxvY2FsZXNbbGFuZ11bJ3JlZ2lvbiddW3JlZ2lvbl07XG4gICAgICAgICAgICAgICAgaWYgKF8uaXNOaWwocmVnaW9uKSAmJiAhXy5pc05pbChsb2NhbGVzX2xhbmcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGJlc3RHdWVzcyA9IFtsYW5nLCBudWxsXTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghXy5pc05pbChyZWdpb24pICYmICFfLmlzTmlsKGxvY2FsZXNfbGFuZykgJiYgIV8uaXNOaWwobG9jYWxlc19yZWdpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgIGJlc3RHdWVzcyA9IFtsYW5nLCByZWdpb25dO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFfLmlzTmlsKHJlZ2lvbikgJiYgIV8uaXNOaWwobG9jYWxlc19sYW5nKSAmJiBfLmlzTmlsKGxvY2FsZXNfcmVnaW9uKSkge1xuICAgICAgICAgICAgICAgICAgICBmYWxsYmFja0d1ZXNzID0gW2xhbmcsIG51bGxdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBmaW5hbEd1ZXNzID0gYmVzdEd1ZXNzIHx8IGZhbGxiYWNrR3Vlc3MgfHwgZGVmYXVsdExvY2FsZTtcbiAgICAgICAgICAgIHJlcS5sb2NhbGUgPSBfX2NvbnN0cnVjdF9sYW5nX3JlZ2lvbihmaW5hbEd1ZXNzWzBdLCBmaW5hbEd1ZXNzWzFdKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBGcmFnbGF0ZS5wcm90b3R5cGUuX3QgPSBmdW5jdGlvbihrZXksIGxvY2FsZV9zdHIsIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKF8uaXNOaWwobG9jYWxlX3N0cikpIHtcbiAgICAgICAgICAgIGxvY2FsZV9zdHIgPSAoICghXy5pc05pbCh0aGlzLmV4cHJlc3NfcmVxdWVzdCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA/ICh0aGlzLmV4cHJlc3NfcmVxdWVzdC5sb2NhbGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA6ICh0aGlzLmNvbmZpZ1snZGVmYXVsdF9sb2NhbGUnXSkgKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbGFuZ19yZWdpb24gPSBfX2dldF9sYW5nX3JlZ2lvbihsb2NhbGVfc3RyKTtcbiAgICAgICAgdmFyIGxhbmcgPSBsYW5nX3JlZ2lvblswXTtcbiAgICAgICAgdmFyIHJlZ2lvbiA9IGxhbmdfcmVnaW9uWzFdO1xuICAgICAgICBpZiAoIV9faXNfZXhpc3RfbG9jYWxlKHRoaXMubG9jYWxlcywgbGFuZywgcmVnaW9uKSkge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkxvY2FsZSAnXCIgKyBsb2NhbGVfc3RyICsgXCInIGlzIG5vdCBjb25maWd1cmVkIVwiKTtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJMb2NhbGUgYXZhaWxhYmxlOiBcIiArIEpTT04uc3RyaW5naWZ5KHRoaXMubG9jYWxlcykpO1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnRyYW5zbGF0ZShrZXksIGxhbmcsIHJlZ2lvbiwgY29udGV4dCk7XG4gICAgfTtcblxuICAgIEZyYWdsYXRlLnByb3RvdHlwZS5fZSA9IGZ1bmN0aW9uKHN0ciwgbG9jYWxlX3N0ciwgY29udGV4dCkge1xuICAgICAgICBpZiAoXy5pc05pbChsb2NhbGVfc3RyKSkge1xuICAgICAgICAgICAgbG9jYWxlX3N0ciA9ICggKCFfLmlzTmlsKHRoaXMuZXhwcmVzc19yZXF1ZXN0KSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgID8gKHRoaXMuZXhwcmVzc19yZXF1ZXN0LmxvY2FsZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKHRoaXMuY29uZmlnWydkZWZhdWx0X2xvY2FsZSddKSApO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsYW5nX3JlZ2lvbiA9IF9fZ2V0X2xhbmdfcmVnaW9uKGxvY2FsZV9zdHIpO1xuICAgICAgICB2YXIgbGFuZyA9IGxhbmdfcmVnaW9uWzBdO1xuICAgICAgICB2YXIgcmVnaW9uID0gbGFuZ19yZWdpb25bMV07XG4gICAgICAgIGlmICghX19pc19leGlzdF9sb2NhbGUodGhpcy5sb2NhbGVzLCBsYW5nLCByZWdpb24pKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiTG9jYWxlICdcIiArIGxvY2FsZV9zdHIgKyBcIicgaXMgbm90IGNvbmZpZ3VyZWQhXCIpO1xuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRnJhZ2xhdGUuRVZBTCh0aGlzKS5ldmFsKHN0ciwgbGFuZywgcmVnaW9uLCBjb250ZXh0KTtcbiAgICB9O1xuXG4gICAgRnJhZ2xhdGUucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKGtleSwgbGFuZywgcmVnaW9uLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBmZSA9IG5ldyBGcmFnbGF0ZS5FVkFMKHRoaXMpO1xuICAgICAgICB2YXIgbG9jYWxldW5pdCA9ICggKF8uaXNOdWxsKHJlZ2lvbikpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICA/ICh0aGlzLmxvY2FsZXNbbGFuZ11bJ2RhdGEnXVtrZXldKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAodGhpcy5sb2NhbGVzW2xhbmddWydyZWdpb24nXVtyZWdpb25dW2tleV0pKTtcbiAgICAgICAgaWYgKHR5cGVvZiBsb2NhbGV1bml0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIGZlLmV2YWwobG9jYWxldW5pdCwgbGFuZywgcmVnaW9uLCBjb250ZXh0KTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbG9jYWxldW5pdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2xvY2FsZTogJyArIGxvY2FsZS50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICsgJywgbm8gdHJhbnNsYXRpb24gdG8ga2V5OiBcIidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKyBrZXkudG9TdHJpbmcoKSArICdcIicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignbG9jYWxlOiAnICsgbG9jYWxlLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKyAnLCB0cmFuc2xhdGlvbiB0byBcXCcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICsgKHR5cGVvZiBsb2NhbGV1bml0KS50b1N0cmluZygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICsgJ1xcJyBpcyBub3Qgc3VwcG9ydGVkIScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG5cbiAgICByZXR1cm4gRnJhZ2xhdGU7XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZyYWdsYXRlQ2xhc3M7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8vIGNoZWNrIGB2YWx1ZWAgaXMgbnVsbCBvciB1bmRlZmluZWRcbm1vZHVsZS5leHBvcnRzLmlzTmlsID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT0gbnVsbDtcbn07XG5cbi8vIGNoZWNrIGB2YWx1ZWAgaXMgbnVsbFxubW9kdWxlLmV4cG9ydHMuaXNOdWxsID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IG51bGw7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
